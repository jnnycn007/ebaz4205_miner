# bitstream project

all: bitread verify_compression

bitread: bitread.c
	cc -o bitread bitread.c

verify_compression: verify_compression.o pl_data.o
	cc -o verify_compression verify_compression.o pl_data.o

install: bitread
	#cp bitread /usr/local/bin
	cp bitread /home/tom/bin

install2: bitread
	cp bitread ../fabric
	cp bitread ../blink1
	cp bitread ../blink2

# ---------

# Just read and list information
test:
	./bitread clock.bit

# Extract a .bin file from a .bit file
test_bin:
	./bitread -e clock.bit
	cmp clock.bin ORIG.bin

# Generate code and try to compile it
mkdata:
	./bitread -c clock.bit >pl_data.c
	cc -c pl_data.c

verify:
	./verify_compression
	cmp verify.bin ORIG.bin

# Get the files generated by Vivado
get:
	cp /home/tom/vivado/ebaz_blink_2/ebaz_blink_2.runs/impl_1/clocks_wrapper.bit clock.bit
	cp /home/tom/vivado/ebaz_blink_2/ebaz_blink_2.runs/impl_1/clocks_wrapper.bin ORIG.bin

count:	ORIG.bin
	cat ORIG.bin | tr -d '\0' | wc -c 

# Here is a bonus item
# This works to program the PL on the ebaz via the xvcd-pico gadget (JTAG)
prog:
	#openFPGALoader --verbose-level 2 -c xvc-client --file-type bit clocks_wrapper.bit
	openFPGALoader -c xvc-client --file-type bit clocks_wrapper.bit

clean:
	rm -f *.bin
	rm -f *.bit
	rm -f *.o bitread
	rm -f verify_compression
