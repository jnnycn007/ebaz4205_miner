# bitstream project

all: bitread

bitread: bitread.c
	cc -o bitread bitread.c

install: bitread
	cp bitread /usr/local/bin

# ---------

# Just read and list information
test:
	./bitread clocks_wrapper.bit

# Extract a .bin file from a .bit file
test_bin:
	./bitread -e clocks_wrapper.bit
	cmp clocks_wrapper.bin ORIG.bin

# Generate code and try to compile it
mkdata:
	./bitread -c clocks_wrapper.bit >test.c
	cc -c test.c

# Get the files generated by Vivado
get:
	cp /home/tom/vivado/ebaz_blink_2/ebaz_blink_2.runs/impl_1/clocks_wrapper.bit .
	cp /home/tom/vivado/ebaz_blink_2/ebaz_blink_2.runs/impl_1/clocks_wrapper.bin ORIG.bin

count:	ORIG.bin
	cat ORIG.bin | tr -d '\0' | wc -c 

# Here is a bonus item
# This works to program the PL on the ebaz via the xvcd-pico gadget (JTAG)
prog:
	#openFPGALoader --verbose-level 2 -c xvc-client --file-type bit clocks_wrapper.bit
	openFPGALoader -c xvc-client --file-type bit clocks_wrapper.bit

clean:
	rm -f *.bin
	rm -f *.bit
	rm -f *.o bitread
